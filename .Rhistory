mkdir docs
mkdir docs
quarto::quarto_render()
quarto::quarto_render()
quarto::quarto_render()
While we typically work with one or a small set of BpSs, there are times when downloading the entire set developed for the lower 48 states plus Hawaii and Alaska is most efficient.
# render the website in the current directory
quarto render
quarto render
quarto::quarto_render(
"authoring.qmd",
output_format = c("pdf", "html", "docx")
)
install.packages(quarto)
library(quarto)
quarto::quarto_render()
quarto::quarto_render(
"1_what-is-landfire.qmd",
)
# Load necessary library
library(quarto)
# List all .qmd files in the project directory
qmd_files <- list.files(pattern = "\\.qmd$")
# Render each .qmd file to a Word document
for (file in qmd_files) {
output_file <- sub("\\.qmd$", ".docx", file)
quarto_render(input = file, output_format = "word_document", output_file = output_file)
}
# Load necessary library
library(quarto)
# List all .qmd files in the project directory
qmd_files <- list.files(pattern = "\\.qmd$")
# Render each .qmd file to a Word document
for (file in qmd_files) {
output_file <- sub("\\.qmd$", ".docx", file)
quarto_render(input = file, output_format = "word_document", output_file = output_file)
}
# Load necessary library
library(quarto)
# List all .qmd files in the project directory
qmd_files <- list.files(pattern = "\\.qmd$")
# Render each .qmd file to a Word document
for (file in qmd_files) {
output_file <- sub("\\.qmd$", ".docx", file)
quarto_render(input = file, output_format = "docx", output_file = output_file)
}
pandoc *.docx -o combined.docx
# Load necessary library
library(quarto)
# List all .qmd files in the project directory
qmd_files <- list.files(pattern = "\\.qmd$")
# Render each .qmd file to a Word document
for (file in qmd_files) {
output_file <- sub("\\.qmd$", ".docx", file)
quarto_render(input = file, output_format = "docx", output_file = output_file)
}
pandoc *.docx -o combined.docx
# Load necessary library
library(quarto)
# List all .qmd files in the project directory
qmd_files <- list.files(pattern = "\\.qmd$")
# Render each .qmd file to a Word document
for (file in qmd_files) {
output_file <- sub("\\.qmd$", ".docx", file)
quarto_render(input = file, output_format = "docx", output_file = output_file)
}
# Load necessary library
library(quarto)
# List all .qmd files in the project directory
qmd_files <- list.files(pattern = "\\.qmd$")
# Function to list all .qmd files recursively
list_qmd_files <- function(path = ".") {
list.files(path, pattern = "\\.qmd$", recursive = TRUE, full.names = TRUE)
}
View(list_qmd_files)
View(list_qmd_files)
# Get all .qmd files in the project directory and subdirectories
qmd_files <- list_qmd_files()
# Render each .qmd file to a Word document
for (file in qmd_files) {
output_file <- sub("\\.qmd$", ".docx", basename(file))
quarto_render(input = file, output_format = "docx", output_file = output_file)
}
pandoc rendered_docs/*.docx -o combined.docx
pandoc rendered_docs/*.docx -o combined.docx
pandoc --version
library(pandoc)
pandoc --version
pandoc --version
# List all .docx files in the directory
docx_files <- list.files(path = "rendered_docs", pattern = "\\.docx$", full.names = TRUE)
# Sort files numerically
sorted_files <- docx_files[order(as.numeric(gsub("\\D", "", basename(docx_files))))]
# Write the sorted file list to a text file
writeLines(sorted_files, "filelist.txt")
# List all .docx files in the directory
docx_files <- list.files(path = "rendered_docs", pattern = "\\.docx$", full.names = TRUE)
# Sort files numerically
sorted_files <- docx_files[order(as.numeric(gsub("\\D", "", basename(docx_files))))]
# Write the sorted file list to a text file
writeLines(sorted_files, "filelist.txt")
quarto render
